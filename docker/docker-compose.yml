version: '3.8'

services:
  media-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - GO_VERSION=1.23
    image: rtsp-webrtc-server:latest
    container_name: rtsp-webrtc-server
    ports:
      - "${HTTP_PORT:-8080}:8080"      # HTTP API & Web UI
      - "${WS_PORT:-8081}:8081"        # WebSocket Signaling
      - "${METRICS_PORT:-9090}:9090"   # Prometheus Metrics
    volumes:
      # Config file (read-only)
      - ../configs/config.yaml:/app/configs/config.yaml:ro
      # Logs (persistent)
      - media-logs:/app/logs
      # Optional: Override with custom config
      # - ./config.production.yaml:/app/configs/config.yaml:ro
    environment:
      - TZ=${TZ:-Asia/Seoul}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    restart: unless-stopped
    networks:
      - media-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Prometheus (선택적)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - media-network
    profiles:
      - monitoring

  # Grafana (선택적)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - media-network
    profiles:
      - monitoring

volumes:
  media-logs:
  prometheus-data:
  grafana-data:

networks:
  media-network:
    driver: bridge
